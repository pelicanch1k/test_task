definitions:
  model.ModelResponseDto:
    properties:
      message:
        type: string
      model: {}
      status:
        type: string
    type: object
  users.CreateUser:
    properties:
      name:
        maxLength: 40
        type: string
      patronymic:
        maxLength: 40
        type: string
      surname:
        maxLength: 40
        type: string
    required:
    - name
    - patronymic
    - surname
    type: object
  users.UpdateUser:
    properties:
      age:
        maximum: 150
        minimum: 0
        type: integer
      gender:
        enum:
        - male
        - female
        - other
        type: string
      name:
        type: string
      nationality:
        maxLength: 2
        minLength: 2
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: Add User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request - Invalid input
          schema:
            type: string
        "500":
          description: Internal Server Error - Database or server issue
          schema:
            type: string
      summary: Add a new user
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ModelResponseDto'
        "400":
          description: Bad Request - Invalid input
          schema:
            type: string
        "500":
          description: Internal Server Error - Database or server issue
          schema:
            type: string
      summary: Delete user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Updates user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ModelResponseDto'
        "400":
          description: Bad Request - Invalid input
          schema:
            type: string
        "404":
          description: Not Found - User not found
          schema:
            type: string
        "500":
          description: Internal Server Error - Database or server issue
          schema:
            type: string
      summary: Update user
      tags:
      - Users
  /api/v1/users/filter:
    get:
      consumes:
      - application/json
      description: Returns a list of users with optional filtering and pagination
      parameters:
      - description: Filter by name (case insensitive)
        in: query
        name: name
        type: string
      - description: Filter by surname (case insensitive)
        in: query
        name: surname
        type: string
      - description: Minimum age filter (use with age_2 for range)
        in: query
        name: age
        type: integer
      - description: Maximum age filter (use with age for range)
        in: query
        name: age_2
        type: integer
      - description: Filter by gender (male/female/other)
        in: query
        name: gender
        type: string
      - description: Filter by nationality (2-letter country code)
        in: query
        name: nationality
        type: string
      - description: 'Number of items per page (default: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Offset for pagination (default: 1)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request - Invalid filter parameters
          schema:
            type: string
        "500":
          description: Internal Server Error - Database or server issue
          schema:
            type: string
      summary: Get users with filters and pagination
      tags:
      - Users
swagger: "2.0"
